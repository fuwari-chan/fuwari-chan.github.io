const id="termux/termux-5.md",collection="posts",slug="termux/termux-5",body='### Ubuntu 22.04 LTS (Jammy) in Chroot\n\n<p style=\'text-align: justify;\'>\n&nbsp; &nbsp; Langkah-langkah yang dijelaskan dalam artikel ini memerlukan izin root. Jika ponsel Anda belum di-root, silakan gunakan <a href="https://fuwari-chan.github.io/posts/termux/termux-1/">proot Ubuntu jammy</a> (catatan: proot lebih lambat dari chroot dan Tidak Full Power).\n</p>\n\n<p style=\'text-align: justify;\'>\n&nbsp; &nbsp; Termux, sebuah emulator terminal, bisa menjadi alternatif Linux Deploy yang bagus. Meskipun Linux Deploy memiliki antarmuka yang intuitif, ini agak lama, terutama versi rootfs, dan skrip pengunduhan default tidak ditulis dengan baik dan mudah untuk diputuskan sambungannya. Juga beberapa pengaturan tidak terlalu memuaskan ,namun jika ingin mengoprek linux deploy sebenarnya cukup powerfull di bandingkan termux,dari segi wakelock termux dirasa kurang memuaskan,namun linux deploy dari segi wakelock memuaskan,untuk source memang sudah terlalu lama,jadi untuk simple bisa menggunakan termux,untuk yang ingin oprek linux deploy bisa jadi powerfull!yup banyak kekurangan dan kelebihan dari masing-masingnya!\n</p>\n\n<p style=\'text-align: justify;\'>\n&nbsp; &nbsp; Jadi mari kita gunakan Termux untuk membuat lingkungan chroot secara manual!\n</p>\n\n<p style=\'text-align: justify;\'>\n&nbsp; &nbsp; Pada artikel ini, saya akan menginstal lingkungan chroot Ubuntu secara manual di ponsel Android tanpa menggunakan Linux Deploy. Dan kelanjutan tentang <a href="https://fuwari-chan.github.io/posts/termux/termux-4/">Chroot Linux</a> sebagai rescue mode.di artikel ini fungsi chroot sebagai virtualisasi!\n</p>\n\n#### Prepare Installation\n\n1. Install Busybox, Termux, Termux X11\n\n> - Gunakan Magisk untuk mem-flash modul Busybox (install module busybox) atau bisa download di Play Store)\n> - Install [Termux](https://f-droid.org/en/packages/com.termux/)\n> - Install [Termux-x11](https://github.com/termux/termux-x11/releases) (Untuk GUI)\n> - Install virglrenderer to enable hardware acceleration. (Opsi GUI)\n\n2. Download Dan Install Ubuntu RootFS\n\n> - Open Termux\n```\napt update && apt upgrade\napt install root-repo\napt install x11-repo\ntermux-setup-storage\n```\n> - Install sudo Termux\n```\napt install tsu\n```\n\n:::note\nketik `su` ijinkan root access!\n:::\n\n> - Membuat Direktori `/data/local/tmp`\n\n:::note\nPosisi dalam root access setelah ketik `su`\n\n`$` -> Non root\n\n`#` -> Super User (Root)\n:::\n\n```\nmkdir /data/local/tmp/ubuntu-kosetsu\ncd /data/local/tmp/ubuntu-kosetsu\n```\n\n> - Download Ubuntu base rootfs\n\n```\nwget https://cdimage.ubuntu.com/ubuntu-base/releases/22.04/release/ubuntu-base-22.04-base-arm64.tar.gz\n```\n\n> - Unzip RootFS\n\n```\ntar xpvf ubuntu-base-22.04-base-arm64.tar.gz --numeric-owner\n\nmkdir sdcard\nmkdir dev/shm\n```\n\n> - Membuat Script Running Ubuntu-chroot\n\n```\ncd ../\nvi startu.sh\natau\nnano start.sh\n```\n\n> - Copas Script \n\n```\n#!/bin/sh\n\n# The path of Ubuntu rootfs\nUBUNTUPATH="/data/local/tmp/ubuntu-kosetsu"\n\n# Fix setuid issue\nbusybox mount -o remount,dev,suid /data\n\nbusybox mount --bind /dev $UBUNTUPATH/dev\nbusybox mount --bind /sys $UBUNTUPATH/sys\nbusybox mount --bind /proc $UBUNTUPATH/proc\nbusybox mount -t devpts devpts $UBUNTUPATH/dev/pts\n\n# /dev/shm for Electron apps\nbusybox mount -t tmpfs -o size=256M tmpfs $UBUNTUPATH/dev/shm\n\n# Mount sdcard\nbusybox mount --bind /sdcard $UBUNTUPATH/sdcard\n\n# chroot into Ubuntu\nbusybox chroot $UBUNTUPATH /bin/su - root\n\n# Umount everything after exiting the shell. Because the graphical environment will be installed later, they are commented. If you do not want to install a graphics environment, uncomment the following commands.\n#busybox umount $UBUNTUPATH/dev/shm\n#busybox umount $UBUNTUPATH/dev/pts\n#busybox umount $UBUNTUPATH/dev\n#busybox umount $UBUNTUPATH/proc\n#busybox umount $UBUNTUPATH/sys\n#busybox umount $UBUNTUPATH/sdcard\n```\n\n> - Make the script executable\n\n```\nchmod +x startu.sh\n```\n\n> - Start skript\n\n```\nsh start.sh\n```\n\n:::note\nMaka akan melihat prompt menjadi `root@localhost`. Untuk keluar, ketik `exit`.\nuntuk tahap Command Line Sebenarnya sudah selesai,mari kita finishing!!!\n\nSebelum memperbarui paket, jalankan perintah berikut untuk mengatasi apt tidak dapat menyelesaikan kesalahan host\n:::\n\n> - Setting Network and Host\n\n:::note\nSebelum update Cek Terlebih dahulu apakah resolv config dan hostnya sudah terseting!!!\n\njika belum gunakan perintah ini!!!\n:::\n\n```\necho "nameserver 8.8.8.8" > /etc/resolv.conf\necho "127.0.0.1 localhost" > /etc/hosts\n```\n> - Kemudian perbaiki Pengunduhan fix sebagai peringatan root:\n\n:::note\nantisipasi peringatan unsandbox\nas root\n:::\n\n```\ngroupadd -g 3003 aid_inet\ngroupadd -g 3004 aid_net_raw\ngroupadd -g 1003 aid_graphics\nusermod -g 3003 -G 3003,3004 -a _apt\nusermod -G 3003 -a root\n```\n> - Update & Upgrade Ubuntu Jammy\n\n```\napt update\napt upgrade\n```\n\n> - Install common tools\n\n```\napt install nano vim net-tools sudo git\n```\n\n3. Memebuat Regular User dan Setup Time Zone\n\n> - Setup Time Zone\n\n```\nln -sf /usr/share/zoneinfo/Asia/Jakarta /etc/localtime\n```\n\n> - Add user baru\n\n```\ngroupadd storage\ngroupadd wheel\nuseradd -m -g users -G wheel,audio,video,storage,aid_inet -s /bin/bash kosetsu\npasswd kosetsu\n```\n:::note\nkosetsu adalah user yang saya buat!\n\nkalian buat user sendiri bebas!!!\n\nuntuk root bisa diberi password dengan perintah `passwd` atau `passwd root`\n:::\n\n4. Execute: `vim /etc/sudoers`. Add user to sudoers\n\n:::note\nMemeberi access super user atau sudo untuk user baru!\nmenggunakan vi atau nano `nano /etc/sudoers` atau `visudo`\n\nSetelah ini cari baris :\n\nroot ALL=(ALL:ALL) ALL\n\nmasukan user kalian disini !!!\n:::\n```\nkosetsu ALL=(ALL:ALL) ALL\n```\n\n:::note[Example]\ncontoh seperti ini\n:::\n\n```\nvisudo\n\nroot ALL=(ALL:ALL) ALL\nkosetsu ALL=(ALL:ALL) ALL\n```\n\n5. Switch to user (TEST USER)\n\n```\nsu kosetsu\ncd\n```\n6. Skript Akhir Kosetsu\n\n```\n#!/bin/sh\n\n# The path of Ubuntu rootfs\nUBUNTUPATH="/data/local/tmp/ubuntu-kosetsu"\n\n# Fix setuid issue\nbusybox mount -o remount,dev,suid /data\n\nbusybox mount --bind /dev $UBUNTUPATH/dev\nbusybox mount --bind /sys $UBUNTUPATH/sys\nbusybox mount --bind /proc $UBUNTUPATH/proc\nbusybox mount -t devpts devpts $UBUNTUPATH/dev/pts\n\n# /dev/shm for Electron apps\nbusybox mount -t tmpfs -o size=256M tmpfs $UBUNTUPATH/dev/shm\n\n# Mount sdcard\nbusybox mount --bind /sdcard $UBUNTUPATH/sdcard\n\n# chroot into Ubuntu\nbusybox chroot $UBUNTUPATH /bin/su - kosetsu\n\n# Umount everything after exiting the shell. Because the graphical environment will be installed later, they are commented. If you do not want to install a graphics environment, uncomment the following commands.\n#busybox umount $UBUNTUPATH/dev/shm\n#busybox umount $UBUNTUPATH/dev/pts\n#busybox umount $UBUNTUPATH/dev\n#busybox umount $UBUNTUPATH/proc\n#busybox umount $UBUNTUPATH/sys\n#busybox umount $UBUNTUPATH/sdcard\n```\n:::note[Sekian]\nSelesai untuk Ubuntu Jammy Chroot Selanjutnya Silahkan berimajinasi !!!\n:::\n\n> - Semoga Bermanfaat üòÅ\n',data={title:"Ubuntu Chroot",published:new Date(17280864e5),draft:!1,description:"Install Ubuntu In Chroot",image:"/images/ubuntukosetsu.jpeg",tags:["Tutorial","Catatan","Termux Basic","Basic Linux","Blogging"],category:"Termux"},_internal={type:"content",filePath:"/home/kosetsu/my-doc/fuwariblog/src/content/posts/termux/termux-5.md",rawData:void 0};export{_internal,body,collection,data,id,slug};