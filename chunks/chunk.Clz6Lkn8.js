import{c as createComponent,r as renderTemplate,m as maybeRenderHead,u as unescapeHTML}from"./chunk.BElhfJQu.js";const html='<h3 id="ubuntu-2204-lts-jammy-in-chroot">Ubuntu 22.04 LTS (Jammy) in Chroot<a class="anchor" href="#ubuntu-2204-lts-jammy-in-chroot"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p style="text-align: justify;">\n    Langkah-langkah yang dijelaskan dalam artikel ini memerlukan izin root. Jika ponsel Anda belum di-root, silakan gunakan <a href="https://fuwari-chan.github.io/posts/termux/termux-1/">proot Ubuntu jammy</a> (catatan: proot lebih lambat dari chroot dan Tidak Full Power).\n</p>\n<p style="text-align: justify;">\n    Termux, sebuah emulator terminal, bisa menjadi alternatif Linux Deploy yang bagus. Meskipun Linux Deploy memiliki antarmuka yang intuitif, ini agak lama, terutama versi rootfs, dan skrip pengunduhan default tidak ditulis dengan baik dan mudah untuk diputuskan sambungannya. Juga beberapa pengaturan tidak terlalu memuaskan ,namun jika ingin mengoprek linux deploy sebenarnya cukup powerfull di bandingkan termux,dari segi wakelock termux dirasa kurang memuaskan,namun linux deploy dari segi wakelock memuaskan,untuk source memang sudah terlalu lama,jadi untuk simple bisa menggunakan termux,untuk yang ingin oprek linux deploy bisa jadi powerfull!yup banyak kekurangan dan kelebihan dari masing-masingnya!\n</p>\n<p style="text-align: justify;">\n    Jadi mari kita gunakan Termux untuk membuat lingkungan chroot secara manual!\n</p>\n<p style="text-align: justify;">\n    Pada artikel ini, saya akan menginstal lingkungan chroot Ubuntu secara manual di ponsel Android tanpa menggunakan Linux Deploy. Dan kelanjutan tentang <a href="https://fuwari-chan.github.io/posts/termux/termux-4/">Chroot Linux</a> sebagai rescue mode.di artikel ini fungsi chroot sebagai virtualisasi!\n</p>\n<h4 id="prepare-installation">Prepare Installation<a class="anchor" href="#prepare-installation"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<ol>\n<li>Install Busybox, Termux, Termux X11</li>\n</ol>\n<blockquote>\n<ul>\n<li>Gunakan Magisk untuk mem-flash modul Busybox (install module busybox) atau bisa download di Play Store)</li>\n<li>Install <a href="https://f-droid.org/en/packages/com.termux/">Termux</a></li>\n<li>Install <a href="https://github.com/termux/termux-x11/releases">Termux-x11</a> (Untuk GUI)</li>\n<li>Install virglrenderer to enable hardware acceleration. (Opsi GUI)</li>\n</ul>\n</blockquote>\n<ol start="2">\n<li>Download Dan Install Ubuntu RootFS</li>\n</ol>\n<blockquote>\n<ul>\n<li>Open Termux</li>\n</ul>\n</blockquote>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="plaintext"><code><span class="line"><span>apt update &#x26;&#x26; apt upgrade</span></span>\n<span class="line"><span>apt install root-repo</span></span>\n<span class="line"><span>apt install x11-repo</span></span>\n<span class="line"><span>termux-setup-storage</span></span>\n<span class="line"><span></span></span></code></pre>\n<blockquote>\n<ul>\n<li>Install sudo Termux</li>\n</ul>\n</blockquote>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="plaintext"><code><span class="line"><span>apt install tsu</span></span>\n<span class="line"><span></span></span></code></pre>\n<blockquote class="admonition bdm-note"><span class="bdm-title">NOTE</span><p>ketik <code>su</code> ijinkan root access!</p></blockquote>\n<blockquote>\n<ul>\n<li>Membuat Direktori <code>/data/local/tmp</code></li>\n</ul>\n</blockquote>\n<blockquote class="admonition bdm-note"><span class="bdm-title">NOTE</span><p>Posisi dalam root access setelah ketik <code>su</code></p><p><code>$</code> -> Non root</p><p><code>#</code> -> Super User (Root)</p></blockquote>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="plaintext"><code><span class="line"><span>mkdir /data/local/tmp/ubuntu-kosetsu</span></span>\n<span class="line"><span>cd /data/local/tmp/ubuntu-kosetsu</span></span>\n<span class="line"><span></span></span></code></pre>\n<blockquote>\n<ul>\n<li>Download Ubuntu base rootfs</li>\n</ul>\n</blockquote>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="plaintext"><code><span class="line"><span>wget https://cdimage.ubuntu.com/ubuntu-base/releases/22.04/release/ubuntu-base-22.04-base-arm64.tar.gz</span></span>\n<span class="line"><span></span></span></code></pre>\n<blockquote>\n<ul>\n<li>Unzip RootFS</li>\n</ul>\n</blockquote>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="plaintext"><code><span class="line"><span>tar xpvf ubuntu-base-22.04-base-arm64.tar.gz --numeric-owner</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>mkdir sdcard</span></span>\n<span class="line"><span>mkdir dev/shm</span></span>\n<span class="line"><span></span></span></code></pre>\n<blockquote>\n<ul>\n<li>Membuat Script Running Ubuntu-chroot</li>\n</ul>\n</blockquote>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="plaintext"><code><span class="line"><span>cd ../</span></span>\n<span class="line"><span>vi startu.sh</span></span>\n<span class="line"><span>atau</span></span>\n<span class="line"><span>nano start.sh</span></span>\n<span class="line"><span></span></span></code></pre>\n<blockquote>\n<ul>\n<li>Copas Script</li>\n</ul>\n</blockquote>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="plaintext"><code><span class="line"><span>#!/bin/sh</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># The path of Ubuntu rootfs</span></span>\n<span class="line"><span>UBUNTUPATH="/data/local/tmp/ubuntu-kosetsu"</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># Fix setuid issue</span></span>\n<span class="line"><span>busybox mount -o remount,dev,suid /data</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>busybox mount --bind /dev $UBUNTUPATH/dev</span></span>\n<span class="line"><span>busybox mount --bind /sys $UBUNTUPATH/sys</span></span>\n<span class="line"><span>busybox mount --bind /proc $UBUNTUPATH/proc</span></span>\n<span class="line"><span>busybox mount -t devpts devpts $UBUNTUPATH/dev/pts</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># /dev/shm for Electron apps</span></span>\n<span class="line"><span>busybox mount -t tmpfs -o size=256M tmpfs $UBUNTUPATH/dev/shm</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># Mount sdcard</span></span>\n<span class="line"><span>busybox mount --bind /sdcard $UBUNTUPATH/sdcard</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># chroot into Ubuntu</span></span>\n<span class="line"><span>busybox chroot $UBUNTUPATH /bin/su - root</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># Umount everything after exiting the shell. Because the graphical environment will be installed later, they are commented. If you do not want to install a graphics environment, uncomment the following commands.</span></span>\n<span class="line"><span>#busybox umount $UBUNTUPATH/dev/shm</span></span>\n<span class="line"><span>#busybox umount $UBUNTUPATH/dev/pts</span></span>\n<span class="line"><span>#busybox umount $UBUNTUPATH/dev</span></span>\n<span class="line"><span>#busybox umount $UBUNTUPATH/proc</span></span>\n<span class="line"><span>#busybox umount $UBUNTUPATH/sys</span></span>\n<span class="line"><span>#busybox umount $UBUNTUPATH/sdcard</span></span>\n<span class="line"><span></span></span></code></pre>\n<blockquote>\n<ul>\n<li>Make the script executable</li>\n</ul>\n</blockquote>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="plaintext"><code><span class="line"><span>chmod +x startu.sh</span></span>\n<span class="line"><span></span></span></code></pre>\n<blockquote>\n<ul>\n<li>Start skript</li>\n</ul>\n</blockquote>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="plaintext"><code><span class="line"><span>sh start.sh</span></span>\n<span class="line"><span></span></span></code></pre>\n<blockquote class="admonition bdm-note"><span class="bdm-title">NOTE</span><p>Maka akan melihat prompt menjadi <code>root@localhost</code>. Untuk keluar, ketik <code>exit</code>.\nuntuk tahap Command Line Sebenarnya sudah selesai,mari kita finishing!!!</p><p>Sebelum memperbarui paket, jalankan perintah berikut untuk mengatasi apt tidak dapat menyelesaikan kesalahan host</p></blockquote>\n<blockquote>\n<ul>\n<li>Setting Network and Host</li>\n</ul>\n</blockquote>\n<blockquote class="admonition bdm-note"><span class="bdm-title">NOTE</span><p>Sebelum update Cek Terlebih dahulu apakah resolv config dan hostnya sudah terseting!!!</p><p>jika belum gunakan perintah ini!!!</p></blockquote>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="plaintext"><code><span class="line"><span>echo "nameserver 8.8.8.8" > /etc/resolv.conf</span></span>\n<span class="line"><span>echo "127.0.0.1 localhost" > /etc/hosts</span></span>\n<span class="line"><span></span></span></code></pre>\n<blockquote>\n<ul>\n<li>Kemudian perbaiki Pengunduhan fix sebagai peringatan root:</li>\n</ul>\n</blockquote>\n<blockquote class="admonition bdm-note"><span class="bdm-title">NOTE</span><p>antisipasi peringatan unsandbox\nas root</p></blockquote>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="plaintext"><code><span class="line"><span>groupadd -g 3003 aid_inet</span></span>\n<span class="line"><span>groupadd -g 3004 aid_net_raw</span></span>\n<span class="line"><span>groupadd -g 1003 aid_graphics</span></span>\n<span class="line"><span>usermod -g 3003 -G 3003,3004 -a _apt</span></span>\n<span class="line"><span>usermod -G 3003 -a root</span></span>\n<span class="line"><span></span></span></code></pre>\n<blockquote>\n<ul>\n<li>Update &#x26; Upgrade Ubuntu Jammy</li>\n</ul>\n</blockquote>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="plaintext"><code><span class="line"><span>apt update</span></span>\n<span class="line"><span>apt upgrade</span></span>\n<span class="line"><span></span></span></code></pre>\n<blockquote>\n<ul>\n<li>Install common tools</li>\n</ul>\n</blockquote>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="plaintext"><code><span class="line"><span>apt install nano vim net-tools sudo git</span></span>\n<span class="line"><span></span></span></code></pre>\n<ol start="3">\n<li>Memebuat Regular User dan Setup Time Zone</li>\n</ol>\n<blockquote>\n<ul>\n<li>Setup Time Zone</li>\n</ul>\n</blockquote>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="plaintext"><code><span class="line"><span>ln -sf /usr/share/zoneinfo/Asia/Jakarta /etc/localtime</span></span>\n<span class="line"><span></span></span></code></pre>\n<blockquote>\n<ul>\n<li>Add user baru</li>\n</ul>\n</blockquote>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="plaintext"><code><span class="line"><span>groupadd storage</span></span>\n<span class="line"><span>groupadd wheel</span></span>\n<span class="line"><span>useradd -m -g users -G wheel,audio,video,storage,aid_inet -s /bin/bash kosetsu</span></span>\n<span class="line"><span>passwd kosetsu</span></span>\n<span class="line"><span></span></span></code></pre>\n<blockquote class="admonition bdm-note"><span class="bdm-title">NOTE</span><p>kosetsu adalah user yang saya buat!</p><p>kalian buat user sendiri bebas!!!</p><p>untuk root bisa diberi password dengan perintah <code>passwd</code> atau <code>passwd root</code></p></blockquote>\n<ol start="4">\n<li>Execute: <code>vim /etc/sudoers</code>. Add user to sudoers</li>\n</ol>\n<blockquote class="admonition bdm-note"><span class="bdm-title">NOTE</span><p>Memeberi access super user atau sudo untuk user baru!\nmenggunakan vi atau nano <code>nano /etc/sudoers</code> atau <code>visudo</code></p><p>Setelah ini cari baris :</p><p>root ALL=(ALL<all></all>) ALL</p><p>masukan user kalian disini !!!</p></blockquote>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="plaintext"><code><span class="line"><span>kosetsu ALL=(ALL:ALL) ALL</span></span>\n<span class="line"><span></span></span></code></pre>\n<blockquote class="admonition bdm-note"><span class="bdm-title"><div>Example</div></span><p>contoh seperti ini</p></blockquote>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="plaintext"><code><span class="line"><span>visudo</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>root ALL=(ALL:ALL) ALL</span></span>\n<span class="line"><span>kosetsu ALL=(ALL:ALL) ALL</span></span>\n<span class="line"><span></span></span></code></pre>\n<ol start="5">\n<li>Switch to user (TEST USER)</li>\n</ol>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="plaintext"><code><span class="line"><span>su kosetsu</span></span>\n<span class="line"><span>cd</span></span>\n<span class="line"><span></span></span></code></pre>\n<ol start="6">\n<li>Skript Akhir Kosetsu</li>\n</ol>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="plaintext"><code><span class="line"><span>#!/bin/sh</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># The path of Ubuntu rootfs</span></span>\n<span class="line"><span>UBUNTUPATH="/data/local/tmp/ubuntu-kosetsu"</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># Fix setuid issue</span></span>\n<span class="line"><span>busybox mount -o remount,dev,suid /data</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>busybox mount --bind /dev $UBUNTUPATH/dev</span></span>\n<span class="line"><span>busybox mount --bind /sys $UBUNTUPATH/sys</span></span>\n<span class="line"><span>busybox mount --bind /proc $UBUNTUPATH/proc</span></span>\n<span class="line"><span>busybox mount -t devpts devpts $UBUNTUPATH/dev/pts</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># /dev/shm for Electron apps</span></span>\n<span class="line"><span>busybox mount -t tmpfs -o size=256M tmpfs $UBUNTUPATH/dev/shm</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># Mount sdcard</span></span>\n<span class="line"><span>busybox mount --bind /sdcard $UBUNTUPATH/sdcard</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># chroot into Ubuntu</span></span>\n<span class="line"><span>busybox chroot $UBUNTUPATH /bin/su - kosetsu</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># Umount everything after exiting the shell. Because the graphical environment will be installed later, they are commented. If you do not want to install a graphics environment, uncomment the following commands.</span></span>\n<span class="line"><span>#busybox umount $UBUNTUPATH/dev/shm</span></span>\n<span class="line"><span>#busybox umount $UBUNTUPATH/dev/pts</span></span>\n<span class="line"><span>#busybox umount $UBUNTUPATH/dev</span></span>\n<span class="line"><span>#busybox umount $UBUNTUPATH/proc</span></span>\n<span class="line"><span>#busybox umount $UBUNTUPATH/sys</span></span>\n<span class="line"><span>#busybox umount $UBUNTUPATH/sdcard</span></span>\n<span class="line"><span></span></span></code></pre>\n<blockquote class="admonition bdm-note"><span class="bdm-title"><div>Sekian</div></span><p>Selesai untuk Ubuntu Jammy Chroot Selanjutnya Silahkan berimajinasi !!!</p></blockquote>\n<blockquote>\n<ul>\n<li>Semoga Bermanfaat 😁</li>\n</ul>\n</blockquote>',frontmatter={title:"Ubuntu Chroot",published:"2024-10-05T00:00:00.000Z",description:"Install Ubuntu In Chroot",image:"/images/ubuntukosetsu.jpeg",tags:["Tutorial","Catatan","Termux Basic","Basic Linux","Blogging"],category:"Termux",draft:!1,minutes:4,words:740},file="/home/kosetsu/my-doc/fuwariblog/src/content/posts/termux/termux-5.md",url=void 0;function rawContent(){return'### Ubuntu 22.04 LTS (Jammy) in Chroot\n\n<p style=\'text-align: justify;\'>\n&nbsp; &nbsp; Langkah-langkah yang dijelaskan dalam artikel ini memerlukan izin root. Jika ponsel Anda belum di-root, silakan gunakan <a href="https://fuwari-chan.github.io/posts/termux/termux-1/">proot Ubuntu jammy</a> (catatan: proot lebih lambat dari chroot dan Tidak Full Power).\n</p>\n\n<p style=\'text-align: justify;\'>\n&nbsp; &nbsp; Termux, sebuah emulator terminal, bisa menjadi alternatif Linux Deploy yang bagus. Meskipun Linux Deploy memiliki antarmuka yang intuitif, ini agak lama, terutama versi rootfs, dan skrip pengunduhan default tidak ditulis dengan baik dan mudah untuk diputuskan sambungannya. Juga beberapa pengaturan tidak terlalu memuaskan ,namun jika ingin mengoprek linux deploy sebenarnya cukup powerfull di bandingkan termux,dari segi wakelock termux dirasa kurang memuaskan,namun linux deploy dari segi wakelock memuaskan,untuk source memang sudah terlalu lama,jadi untuk simple bisa menggunakan termux,untuk yang ingin oprek linux deploy bisa jadi powerfull!yup banyak kekurangan dan kelebihan dari masing-masingnya!\n</p>\n\n<p style=\'text-align: justify;\'>\n&nbsp; &nbsp; Jadi mari kita gunakan Termux untuk membuat lingkungan chroot secara manual!\n</p>\n\n<p style=\'text-align: justify;\'>\n&nbsp; &nbsp; Pada artikel ini, saya akan menginstal lingkungan chroot Ubuntu secara manual di ponsel Android tanpa menggunakan Linux Deploy. Dan kelanjutan tentang <a href="https://fuwari-chan.github.io/posts/termux/termux-4/">Chroot Linux</a> sebagai rescue mode.di artikel ini fungsi chroot sebagai virtualisasi!\n</p>\n\n#### Prepare Installation\n\n1. Install Busybox, Termux, Termux X11\n\n> - Gunakan Magisk untuk mem-flash modul Busybox (install module busybox) atau bisa download di Play Store)\n> - Install [Termux](https://f-droid.org/en/packages/com.termux/)\n> - Install [Termux-x11](https://github.com/termux/termux-x11/releases) (Untuk GUI)\n> - Install virglrenderer to enable hardware acceleration. (Opsi GUI)\n\n2. Download Dan Install Ubuntu RootFS\n\n> - Open Termux\n```\napt update && apt upgrade\napt install root-repo\napt install x11-repo\ntermux-setup-storage\n```\n> - Install sudo Termux\n```\napt install tsu\n```\n\n:::note\nketik `su` ijinkan root access!\n:::\n\n> - Membuat Direktori `/data/local/tmp`\n\n:::note\nPosisi dalam root access setelah ketik `su`\n\n`$` -> Non root\n\n`#` -> Super User (Root)\n:::\n\n```\nmkdir /data/local/tmp/ubuntu-kosetsu\ncd /data/local/tmp/ubuntu-kosetsu\n```\n\n> - Download Ubuntu base rootfs\n\n```\nwget https://cdimage.ubuntu.com/ubuntu-base/releases/22.04/release/ubuntu-base-22.04-base-arm64.tar.gz\n```\n\n> - Unzip RootFS\n\n```\ntar xpvf ubuntu-base-22.04-base-arm64.tar.gz --numeric-owner\n\nmkdir sdcard\nmkdir dev/shm\n```\n\n> - Membuat Script Running Ubuntu-chroot\n\n```\ncd ../\nvi startu.sh\natau\nnano start.sh\n```\n\n> - Copas Script \n\n```\n#!/bin/sh\n\n# The path of Ubuntu rootfs\nUBUNTUPATH="/data/local/tmp/ubuntu-kosetsu"\n\n# Fix setuid issue\nbusybox mount -o remount,dev,suid /data\n\nbusybox mount --bind /dev $UBUNTUPATH/dev\nbusybox mount --bind /sys $UBUNTUPATH/sys\nbusybox mount --bind /proc $UBUNTUPATH/proc\nbusybox mount -t devpts devpts $UBUNTUPATH/dev/pts\n\n# /dev/shm for Electron apps\nbusybox mount -t tmpfs -o size=256M tmpfs $UBUNTUPATH/dev/shm\n\n# Mount sdcard\nbusybox mount --bind /sdcard $UBUNTUPATH/sdcard\n\n# chroot into Ubuntu\nbusybox chroot $UBUNTUPATH /bin/su - root\n\n# Umount everything after exiting the shell. Because the graphical environment will be installed later, they are commented. If you do not want to install a graphics environment, uncomment the following commands.\n#busybox umount $UBUNTUPATH/dev/shm\n#busybox umount $UBUNTUPATH/dev/pts\n#busybox umount $UBUNTUPATH/dev\n#busybox umount $UBUNTUPATH/proc\n#busybox umount $UBUNTUPATH/sys\n#busybox umount $UBUNTUPATH/sdcard\n```\n\n> - Make the script executable\n\n```\nchmod +x startu.sh\n```\n\n> - Start skript\n\n```\nsh start.sh\n```\n\n:::note\nMaka akan melihat prompt menjadi `root@localhost`. Untuk keluar, ketik `exit`.\nuntuk tahap Command Line Sebenarnya sudah selesai,mari kita finishing!!!\n\nSebelum memperbarui paket, jalankan perintah berikut untuk mengatasi apt tidak dapat menyelesaikan kesalahan host\n:::\n\n> - Setting Network and Host\n\n:::note\nSebelum update Cek Terlebih dahulu apakah resolv config dan hostnya sudah terseting!!!\n\njika belum gunakan perintah ini!!!\n:::\n\n```\necho "nameserver 8.8.8.8" > /etc/resolv.conf\necho "127.0.0.1 localhost" > /etc/hosts\n```\n> - Kemudian perbaiki Pengunduhan fix sebagai peringatan root:\n\n:::note\nantisipasi peringatan unsandbox\nas root\n:::\n\n```\ngroupadd -g 3003 aid_inet\ngroupadd -g 3004 aid_net_raw\ngroupadd -g 1003 aid_graphics\nusermod -g 3003 -G 3003,3004 -a _apt\nusermod -G 3003 -a root\n```\n> - Update & Upgrade Ubuntu Jammy\n\n```\napt update\napt upgrade\n```\n\n> - Install common tools\n\n```\napt install nano vim net-tools sudo git\n```\n\n3. Memebuat Regular User dan Setup Time Zone\n\n> - Setup Time Zone\n\n```\nln -sf /usr/share/zoneinfo/Asia/Jakarta /etc/localtime\n```\n\n> - Add user baru\n\n```\ngroupadd storage\ngroupadd wheel\nuseradd -m -g users -G wheel,audio,video,storage,aid_inet -s /bin/bash kosetsu\npasswd kosetsu\n```\n:::note\nkosetsu adalah user yang saya buat!\n\nkalian buat user sendiri bebas!!!\n\nuntuk root bisa diberi password dengan perintah `passwd` atau `passwd root`\n:::\n\n4. Execute: `vim /etc/sudoers`. Add user to sudoers\n\n:::note\nMemeberi access super user atau sudo untuk user baru!\nmenggunakan vi atau nano `nano /etc/sudoers` atau `visudo`\n\nSetelah ini cari baris :\n\nroot ALL=(ALL:ALL) ALL\n\nmasukan user kalian disini !!!\n:::\n```\nkosetsu ALL=(ALL:ALL) ALL\n```\n\n:::note[Example]\ncontoh seperti ini\n:::\n\n```\nvisudo\n\nroot ALL=(ALL:ALL) ALL\nkosetsu ALL=(ALL:ALL) ALL\n```\n\n5. Switch to user (TEST USER)\n\n```\nsu kosetsu\ncd\n```\n6. Skript Akhir Kosetsu\n\n```\n#!/bin/sh\n\n# The path of Ubuntu rootfs\nUBUNTUPATH="/data/local/tmp/ubuntu-kosetsu"\n\n# Fix setuid issue\nbusybox mount -o remount,dev,suid /data\n\nbusybox mount --bind /dev $UBUNTUPATH/dev\nbusybox mount --bind /sys $UBUNTUPATH/sys\nbusybox mount --bind /proc $UBUNTUPATH/proc\nbusybox mount -t devpts devpts $UBUNTUPATH/dev/pts\n\n# /dev/shm for Electron apps\nbusybox mount -t tmpfs -o size=256M tmpfs $UBUNTUPATH/dev/shm\n\n# Mount sdcard\nbusybox mount --bind /sdcard $UBUNTUPATH/sdcard\n\n# chroot into Ubuntu\nbusybox chroot $UBUNTUPATH /bin/su - kosetsu\n\n# Umount everything after exiting the shell. Because the graphical environment will be installed later, they are commented. If you do not want to install a graphics environment, uncomment the following commands.\n#busybox umount $UBUNTUPATH/dev/shm\n#busybox umount $UBUNTUPATH/dev/pts\n#busybox umount $UBUNTUPATH/dev\n#busybox umount $UBUNTUPATH/proc\n#busybox umount $UBUNTUPATH/sys\n#busybox umount $UBUNTUPATH/sdcard\n```\n:::note[Sekian]\nSelesai untuk Ubuntu Jammy Chroot Selanjutnya Silahkan berimajinasi !!!\n:::\n\n> - Semoga Bermanfaat 😁\n'}function compiledContent(){return html}function getHeadings(){return[{depth:3,slug:"ubuntu-2204-lts-jammy-in-chroot",text:"Ubuntu 22.04 LTS (Jammy) in Chroot#"},{depth:4,slug:"prepare-installation",text:"Prepare Installation#"}]}const Content=createComponent(((n,a,s)=>{const{layout:e,...t}=frontmatter;return t.file=file,t.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`}));export{Content,compiledContent,Content as default,file,frontmatter,getHeadings,rawContent,url};