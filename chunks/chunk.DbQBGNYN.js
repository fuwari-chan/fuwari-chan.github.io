import{c as createComponent,r as renderTemplate,m as maybeRenderHead,u as unescapeHTML}from"./chunk.BElhfJQu.js";const html='<h2 id="membuat-webserver-dengan-respon-html">Membuat Webserver dengan Respon HTML<a class="anchor" href="#membuat-webserver-dengan-respon-html"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<p style="text-align: justify;">\n    Setelah kita belajar membuat Webserver nodejs namun hanya merespon dalam bentuk plain teks saja.\n</p>\n<blockquote>\n<ul>\n<li>Bagaimana jika ingin merespon dalam bentuk HTML ?</li>\n</ul>\n</blockquote>\n<p>Kita harus melakukan modifikasi header.</p>\n<p>Contoh kodenya seperti ini:</p>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="plaintext"><code><span class="line"><span>var http = require(\'http\');</span></span>\n<span class="line"><span>http.createServer(function (req, res) {</span></span>\n<span class="line"><span>    res.writeHead(200, {\'Content-Type\': \'text/html\'});</span></span>\n<span class="line"><span>    res.write(\'Hello &#x3C;b>World&#x3C;/b>! is Bold font bro 😎\');</span></span>\n<span class="line"><span>    res.write(\'&#x3C;center>Saya ditengah 😁&#x3C;/center>\');</span></span>\n<span class="line"><span>    res.write(\'&#x3C;b>ini gambar :&#x3C;/b>&#x3C;br>&#x3C;br>&#x3C;center>&#x3C;img width="600" height="400" src="https://raw.githubusercontent.com/cat-milk/Anime-Girls-Holding-Programming-Books/master/NodeJs/Node_JS_In_Action.jpg">\');</span></span>\n<span class="line"><span>    res.write(\'&#x3C;center>&#x3C;h1>kamu bisa gak 🤓 ?&#x3C;/h1>&#x3C;/center>\');</span></span>\n<span class="line"><span>    res.end();</span></span>\n<span class="line"><span>}).listen(3000);</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>console.log("server running on http://localhost:3000");</span></span>\n<span class="line"><span></span></span></code></pre>\n<blockquote>\n<ul>\n<li>Fungsi <code>res.writeHead(200, {\'Content-Type\': \'text/html\'});</code></li>\n</ul>\n</blockquote>\n<blockquote class="admonition bdm-note"><span class="bdm-title"><div>Catatan</div></span><p>Fungsi nya adalah untuk menentukan response header.</p></blockquote>\n<p style="text-align: justify;">\n    Pada kode di atas, kita menentukan tipe responnya berupa <span>text/html</span>. Kita juga bisa menentukan tipe lain seperti JSON, PDF, XML, dan lain-lain.\n</p>\n<blockquote>\n<ul>\n<li>Fungsi  <code>res.write(\'Hello &#x3C;b>World&#x3C;/b>!\');</code></li>\n</ul>\n</blockquote>\n<p style="text-align: justify;">\n    Lalu <span>res.write(\'Hello <b>World</b>!\');</span> fungsinya untuk menulis response body atau konten yang akan dikirim ke client.\n</p>\n<blockquote>\n<ul>\n<li>Fungsi <code>res.end()</code></li>\n</ul>\n</blockquote>\n<p style="text-align: justify;">\n    Terakhir mengakhiri respon dengan <span>res.end()</span>.\n</p>\n<blockquote>\n<p>Test Running</p>\n</blockquote>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="plaintext"><code><span class="line"><span>node server.js</span></span>\n<span class="line"><span></span></span></code></pre>\n<p>Output console :</p>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="plaintext"><code><span class="line"><span>server running on http://localhost:3000</span></span>\n<span class="line"><span></span></span></code></pre>\n<p>Output Wewbrowser :</p>\n<center><img src="/images/nodejshtmlwebserver.jpg"></center>\n<blockquote class="admonition bdm-note"><span class="bdm-title"><div>Sekian</div></span><p>Selamat Berimajinasi 😆</p><p>Semoga Bermanfaat 😁</p></blockquote>',frontmatter={title:"Respon HTML NodeJS",published:"2024-10-18T00:00:00.000Z",description:"Membuat Webserver dengan Respon HTML",image:"https://raw.githubusercontent.com/cat-milk/Anime-Girls-Holding-Programming-Books/master/NodeJs/Node_JS_In_Action.jpg",tags:["NodeJS","Catatan"],category:"NodeJS",draft:!1,minutes:1,words:158},file="/home/kosetsu/my-doc/fuwariblog/src/content/posts/nodejs/nodejs-4.md",url=void 0;function rawContent(){return"## Membuat Webserver dengan Respon HTML\n\n<p style=\"text-align: justify;\">\n&nbsp; &nbsp; Setelah kita belajar membuat Webserver nodejs namun hanya merespon dalam bentuk plain teks saja.\n</p>\n\n> - Bagaimana jika ingin merespon dalam bentuk HTML ?\n\nKita harus melakukan modifikasi header.\n\nContoh kodenya seperti ini:\n```\nvar http = require('http');\nhttp.createServer(function (req, res) {\n    res.writeHead(200, {'Content-Type': 'text/html'});\n    res.write('Hello <b>World</b>! is Bold font bro 😎');\n    res.write('<center>Saya ditengah 😁</center>');\n    res.write('<b>ini gambar :</b><br><br><center><img width=\"600\" height=\"400\" src=\"https://raw.githubusercontent.com/cat-milk/Anime-Girls-Holding-Programming-Books/master/NodeJs/Node_JS_In_Action.jpg\">');\n    res.write('<center><h1>kamu bisa gak 🤓 ?</h1></center>');\n    res.end();\n}).listen(3000);\n\nconsole.log(\"server running on http://localhost:3000\");\n```\n\n> - Fungsi `res.writeHead(200, {'Content-Type': 'text/html'});`\n\n:::note[Catatan]\nFungsi nya adalah untuk menentukan response header.\n:::\n\n<p style=\"text-align: justify;\">\n&nbsp; &nbsp; Pada kode di atas, kita menentukan tipe responnya berupa <span>text/html</span>. Kita juga bisa menentukan tipe lain seperti JSON, PDF, XML, dan lain-lain.\n</p>\n\n> - Fungsi  `res.write('Hello <b>World</b>!');`\n\n<p style=\"text-align: justify;\">\n&nbsp; &nbsp; Lalu <span>res.write('Hello <b>World</b>!');</span> fungsinya untuk menulis response body atau konten yang akan dikirim ke client.\n</p>\n\n> - Fungsi `res.end()`\n\n<p style=\"text-align: justify;\">\n&nbsp; &nbsp; Terakhir mengakhiri respon dengan <span>res.end()</span>.\n</p>\n\n> Test Running\n\n```\nnode server.js\n```\n\nOutput console :\n```\nserver running on http://localhost:3000\n```\n\nOutput Wewbrowser :\n\n<center><img src=\"/images/nodejshtmlwebserver.jpg\"></center>\n\n\n:::note[Sekian]\nSelamat Berimajinasi 😆\n\nSemoga Bermanfaat 😁\n:::\n"}function compiledContent(){return html}function getHeadings(){return[{depth:2,slug:"membuat-webserver-dengan-respon-html",text:"Membuat Webserver dengan Respon HTML#"}]}const Content=createComponent(((n,e,a)=>{const{layout:t,...s}=frontmatter;return s.file=file,s.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`}));export{Content,compiledContent,Content as default,file,frontmatter,getHeadings,rawContent,url};